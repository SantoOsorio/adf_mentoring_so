{
	"name": "Module 9 Metadata-driven ETL",
	"properties": {
		"activities": [
			{
				"name": "GetMetadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "TruncateTables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT DISTINCT\n\t   [source_container]\n      ,[source_folder]\n      ,[source_file_name]\n      ,[source_column_delimiter]\n      ,[source_encoding]\n      ,[source_escape_character]\n      ,[source_quote_character]\n      ,[destination_schema_name]\n      ,[destination_table_name]\n      ,[copy_settings_diu_value]\n      ,[source_column]\n      ,[target_column]\n  FROM [etl].[tControlMetadata]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SINK_ASQL_movies_stg_movies_metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachFiles",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetMetadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetMetadata').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy_data_from_datalake_to_ASQL",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "getColumnMapping",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@item().source_folder",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@item().source_file_name",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"dataIntegrationUnits": {
									"value": "@item().copy_settings_diu_value",
									"type": "Expression"
								},
								"translator": {
									"value": "@json(activity('getColumnMapping').output.firstRow.json_output)",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "DS_azuredatalakeso_metadata_driven",
									"type": "DatasetReference",
									"parameters": {
										"source_container": {
											"value": "@item().source_container",
											"type": "Expression"
										},
										"source_folder": {
											"value": "@item().source_folder",
											"type": "Expression"
										},
										"source_file_name": {
											"value": "@item().source_file_name",
											"type": "Expression"
										},
										"source_column_delimiter": {
											"value": "@item().source_column_delimiter",
											"type": "Expression"
										},
										"source_encoding": {
											"value": "@item().source_encoding",
											"type": "Expression"
										},
										"source_escape_character": {
											"value": "@item().source_escape_character",
											"type": "Expression"
										},
										"source_quote_character": {
											"value": "@item().source_quote_character",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_SINK_ASQL_movies_metadata_driven",
									"type": "DatasetReference",
									"parameters": {
										"destination_schema_name": {
											"value": "@item().destination_schema_name",
											"type": "Expression"
										},
										"destination_table_name": {
											"value": "@item().destination_table_name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "getColumnMapping",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "StartTime",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[sp_getColumnMapping_v2]",
									"storedProcedureParameters": {
										"schema_name": {
											"type": "String",
											"value": {
												"value": "@item().destination_schema_name",
												"type": "Expression"
											}
										},
										"table_name": {
											"type": "String",
											"value": {
												"value": "@item().destination_table_name",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS__ASQL_GetcolumnMapping_sp",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "InsertLoggingData",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EndTime",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_insertLoggingData]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "@item().source_file_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"billing_duration": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.billingReference.billableDuration[0].duration",
											"type": "Expression"
										},
										"type": "String"
									},
									"copy_duration": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.copyDuration",
											"type": "Expression"
										},
										"type": "String"
									},
									"endTime": {
										"value": {
											"value": "@variables('EndTime')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"meter_type": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.billingReference.billableDuration[0].meterType",
											"type": "Expression"
										},
										"type": "String"
									},
									"number_of_parallel_copies": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.usedParallelCopies",
											"type": "Expression"
										},
										"type": "String"
									},
									"number_of_processed_files": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.filesRead",
											"type": "Expression"
										},
										"type": "String"
									},
									"number_of_read_rows": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.rowsRead",
											"type": "Expression"
										},
										"type": "String"
									},
									"number_of_used_DIU": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.usedDataIntegrationUnits",
											"type": "Expression"
										},
										"type": "String"
									},
									"number_of_written_rows": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.rowsCopied",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_name": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_runID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"queue_duration": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.executionDetails[0].detailedDurations.queuingDuration",
											"type": "Expression"
										},
										"type": "String"
									},
									"startTime": {
										"value": {
											"value": "@variables('StartTime')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"transfer_duration": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.executionDetails[0].detailedDurations.transferDuration",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_movies",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "StartTime",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "StartTime",
								"value": {
									"value": "@formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "EndTime",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy_data_from_datalake_to_ASQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "EndTime",
								"value": {
									"value": "@formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "InsertErrorData",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SetErrorMsg",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_UpdateErrorTable]",
								"storedProcedureParameters": {
									"copyDuration_in_secs": {
										"value": {
											"value": "@{activity('Copy_data_from_datalake_to_ASQL').output.copyDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"DataFactory_Name": {
										"value": {
											"value": "@{pipeline().DataFactory}",
											"type": "Expression"
										},
										"type": "String"
									},
									"Destination": {
										"value": {
											"value": "@item().destination_table_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"effectiveIntegrationRuntime": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.effectiveIntegrationRuntime",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorCode": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').Error.errorCode",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorDescription": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').Error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorLoggedTime": {
										"value": {
											"value": "@formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "String"
									},
									"Execution_Status": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.executionDetails[0].status",
											"type": "Expression"
										},
										"type": "String"
									},
									"FailureType": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').Error.failureType",
											"type": "Expression"
										},
										"type": "String"
									},
									"No_ParallelCopies": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.usedParallelCopies",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Pipeline_Name": {
										"value": {
											"value": "@{pipeline().Pipeline}",
											"type": "Expression"
										},
										"type": "String"
									},
									"RunId": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"Sink_Type": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.executionDetails[0].sink.type",
											"type": "Expression"
										},
										"type": "String"
									},
									"Source": {
										"value": {
											"value": "@item().source_file_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"Source_Type": {
										"value": {
											"value": "@activity('Copy_data_from_datalake_to_ASQL').output.executionDetails[0].source.type",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerId": {
										"value": {
											"value": "@{pipeline().TriggerId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerName": {
										"value": {
											"value": "@{pipeline().TriggerName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerTime": {
										"value": {
											"value": "@{pipeline().TriggerTime}",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerType": {
										"value": {
											"value": "@{pipeline().TriggerType}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_movies",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SetErrorMsg",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy_data_from_datalake_to_ASQL",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "ErrorMsg",
								"value": {
									"value": "@string(activity('Copy_data_from_datalake_to_ASQL'))",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "TruncateTables",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "LS_ASQL_movies",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "TRUNCATE TABLE stg.credits;\nTRUNCATE TABLE stg.movies_metadata;\nTRUNCATE TABLE stg.ratings;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"variables": {
			"StartTime": {
				"type": "String"
			},
			"EndTime": {
				"type": "String"
			},
			"ErrorMsg": {
				"type": "String"
			},
			"Test1": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-08-18T20:31:36Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}